---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: InfoGraphic Pipeline builder
  name: infographic-pipeline
labels:
  template: infographic-pipeline
parameters:
- name: NAMESPACE
  description: The OpenShift Namespace Where this pipeline is deployed
  displayName: Infographic Pipeline Namespace
  value: infographic-pipeline
  required: true
- name: NAMESPACE_DEV
  description: The Dev Namespace
  displayName: Infographic Dev Namespace
  value: infographic-dev
  required: true
- name: NAMESPACE_DEMO
  description: The DEMO Namespace
  displayName: Infographic DEMO Namespace
  value: infographic-demo
  required: true
- name: HTTPD_APPLICATION_NAME
  description: The name for the HTTPD application.
  displayName: Apache application name
  value: infographic
  required: true
- name: HTTPD_APPLICATION_SOURCE_REPOSITORY_URL
  description: Git source URI for HTTPD application
  displayName: HTTPD application source url
  value: https://github.com/logandonley/infographic.git
  required: true
- name: HTTPD_APPLICATION_SOURCE_REPOSITORY_REF
  description: HTTPD application source branch/tag reference.
  displayName: HTTPD application source branch/tag reference.
  value: master
  required: false
- name: HTTPD_APPLICATION_CONTEXT_DIR
  description: Path within Git project to build containing the HTTPD application;
    empty for root project directory.
  displayName: HTTPD application context directory.
  value: website
  required: true
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: A secret string used to configure the GitHub webhook.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
objects:
- kind: BuildConfig
  apiVersion: v1
  metadata:
    labels:
      build: "${HTTPD_APPLICATION_NAME}"
      name: "${HTTPD_APPLICATION_NAME}-pipeline"
    name: "${HTTPD_APPLICATION_NAME}-pipeline"
    namespace: "${NAMESPACE}"
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: "${HTTPD_APPLICATION_CONTEXT_DIR}"
      git:
        ref: "${HTTPD_APPLICATION_SOURCE_REPOSITORY_REF}"
        uri: "${HTTPD_APPLICATION_SOURCE_REPOSITORY_URL}"
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: "APP_NAME"
          value: "${HTTPD_APPLICATION_NAME}"
        - name: "NAMESPACE_BUILD"
          value: "${NAMESPACE}"
        - name: "NAMESPACE_DEV"
          value: "${NAMESPACE_DEV}"
        - name: "NAMESPACE_DEMO"
          value: "${NAMESPACE_DEMO}"
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    triggers:
    - github:
        secret: "${PIPELINE_GITHUB_WEBHOOK_SECRET}"
      type: GitHub
    - type: ConfigChange
